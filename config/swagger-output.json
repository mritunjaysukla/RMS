{
  "swagger": "2.0",
  "openapi": "3.0.3",
  "info": {
    "title": "Restaurant Management System API",
    "description": "API for managing restaurant operations, including user authentication, menu management, order processing, staff management, and reporting.",
    "version": "1.0.0",
    "contact": {
      "email": "mritunjaysukla07@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local Development Server"
    },
    {
      "url": "https://rms-ext6.onrender.com",
      "description": "Production Server"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "contact": {
                  "example": "any"
                },
                "dob": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/forgot-password": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reset-password": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "resetCode": {
                  "example": "any"
                },
                "newPassword": {
                  "example": "any"
                },
                "confirmNewPassword": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "role": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "dob": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                },
                "contact": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "role": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "dob": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                },
                "contact": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/menus": {
      "get": {
        "tags": [
          "Menu"
        ],
        "description": "",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "isPopular",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Menu"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "categoryId": {
                  "example": "any"
                },
                "items": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/menus/{id}": {
      "patch": {
        "tags": [
          "Menu"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "categoryId": {
                  "example": "any"
                },
                "isPopular": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Menu"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/menus/{id}/status": {
      "put": {
        "tags": [
          "Menu"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": [
          "Food Category"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Food Category"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/categories/{id}": {
      "put": {
        "tags": [
          "Food Category"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Food Category"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/orders": {
      "post": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "tableId": {
                  "example": "any"
                },
                "items": {
                  "example": "any"
                },
                "specialInstructions": {
                  "example": "any"
                },
                "discount": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "type": "string"
          },
          {
            "name": "waiterId",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/orders/{id}/status": {
      "patch": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/staff": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/staffOnDuty": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/staff/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reports": {
      "post": {
        "tags": [
          "Report"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "period": {
                  "example": "any"
                },
                "submittedToId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Report"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reports/{id}": {
      "get": {
        "tags": [
          "Report"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Bearer token for authentication (e.g., \"Bearer <token>\")."
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "message": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Error message"
                  }
                }
              }
            }
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "string"
          },
          "enum": {
            "type": "array",
            "example": [
              "Admin",
              "Manager",
              "Waiter"
            ],
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "example": "Role assigned to the user"
          }
        }
      },
      "Gender": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "string"
          },
          "enum": {
            "type": "array",
            "example": [
              "Male",
              "Female",
              "Other"
            ],
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "example": "Gender of the user"
          }
        }
      },
      "PasswordReset": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "required": {
            "type": "array",
            "example": [
              "userId",
              "resetCode",
              "expiresAt"
            ],
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "description": {
                    "type": "string",
                    "example": "Unique identifier for the password reset request"
                  }
                }
              },
              "userId": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "description": {
                    "type": "string",
                    "example": "ID of the user requesting password reset"
                  }
                }
              },
              "resetCode": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Code for resetting the password"
                  }
                }
              },
              "expiresAt": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date-time"
                  },
                  "description": {
                    "type": "string",
                    "example": "Expiry timestamp for the reset code"
                  }
                }
              },
              "isUsed": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "boolean"
                  },
                  "description": {
                    "type": "string",
                    "example": "Indicates if the reset code has been used"
                  }
                }
              },
              "requestedAt": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date-time"
                  },
                  "description": {
                    "type": "string",
                    "example": "Timestamp when the reset was requested"
                  }
                }
              }
            }
          }
        }
      },
      "Menu": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "required": {
            "type": "array",
            "example": [
              "name",
              "categoryId",
              "createdById",
              "status"
            ],
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "description": {
                    "type": "string",
                    "example": "Unique identifier for the menu"
                  }
                }
              },
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Name of the menu"
                  }
                }
              },
              "categoryId": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "description": {
                    "type": "string",
                    "example": "ID of the category the menu belongs to"
                  }
                }
              },
              "createdById": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "description": {
                    "type": "string",
                    "example": "ID of the user who created the menu"
                  }
                }
              },
              "status": {
                "$ref": "#/components/schemas/MenuStatus"
              },
              "isApproved": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "boolean"
                  },
                  "description": {
                    "type": "string",
                    "example": "Indicates if the menu is approved"
                  }
                }
              },
              "approvedById": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "nullable": {
                    "type": "boolean",
                    "example": true
                  },
                  "description": {
                    "type": "string",
                    "example": "ID of the user who approved the menu"
                  }
                }
              },
              "createdAt": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date-time"
                  },
                  "description": {
                    "type": "string",
                    "example": "Timestamp when the menu was created"
                  }
                }
              },
              "updatedAt": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date-time"
                  },
                  "description": {
                    "type": "string",
                    "example": "Timestamp when the menu was last updated"
                  }
                }
              },
              "menuItems": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "array"
                  },
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  },
                  "description": {
                    "type": "string",
                    "example": "List of menu items"
                  }
                }
              },
              "category": {
                "$ref": "#/components/schemas/FoodCategory"
              },
              "createdBy": {
                "$ref": "#/components/schemas/User"
              },
              "approvedBy": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "MenuItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "required": {
            "type": "array",
            "example": [
              "name",
              "price",
              "categoryId",
              "menuId"
            ],
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "description": {
                    "type": "string",
                    "example": "Unique identifier for the menu item"
                  }
                }
              },
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Name of the menu item"
                  }
                }
              },
              "price": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "number"
                  },
                  "format": {
                    "type": "string",
                    "example": "float"
                  },
                  "description": {
                    "type": "string",
                    "example": "Price of the menu item"
                  }
                }
              },
              "isAvailable": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "boolean"
                  },
                  "description": {
                    "type": "string",
                    "example": "Indicates if the menu item is available"
                  }
                }
              },
              "isPopular": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "boolean"
                  },
                  "description": {
                    "type": "string",
                    "example": "Indicates if the menu item is popular"
                  }
                }
              },
              "categoryId": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "description": {
                    "type": "string",
                    "example": "ID of the category the menu item belongs to"
                  }
                }
              },
              "menuId": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "description": {
                    "type": "string",
                    "example": "ID of the menu the item belongs to"
                  }
                }
              },
              "category": {
                "$ref": "#/components/schemas/FoodCategory"
              }
            }
          }
        }
      },
      "FoodCategory": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "required": {
            "type": "array",
            "example": [
              "name"
            ],
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "description": {
                    "type": "string",
                    "example": "Unique identifier for the category"
                  }
                }
              },
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Name of the food category"
                  }
                }
              },
              "menus": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "array"
                  },
                  "items": {
                    "$ref": "#/components/schemas/Menu"
                  },
                  "description": {
                    "type": "string",
                    "example": "Menus in this category"
                  }
                }
              },
              "menuItems": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "array"
                  },
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  },
                  "description": {
                    "type": "string",
                    "example": "Menu items in this category"
                  }
                }
              }
            }
          }
        }
      },
      "MenuStatus": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "string"
          },
          "enum": {
            "type": "array",
            "example": [
              "Active",
              "Pending",
              "Rejected"
            ],
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "example": "Status of the menu"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "required": {
            "type": "array",
            "example": [
              "orderNumber",
              "orderStatus",
              "tableId",
              "items"
            ],
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "description": {
                    "type": "string",
                    "example": "Unique identifier for the order"
                  }
                }
              },
              "orderNumber": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Unique order number"
                  }
                }
              },
              "orderStatus": {
                "$ref": "#/components/schemas/OrderStatus"
              },
              "tableId": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "description": {
                    "type": "string",
                    "example": "ID of the table associated with the order"
                  }
                }
              },
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "array"
                  },
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "object"
                      },
                      "required": {
                        "type": "array",
                        "example": [
                          "menuItemId",
                          "quantity"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "type": "object",
                        "properties": {
                          "menuItemId": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "integer"
                              },
                              "description": {
                                "type": "string",
                                "example": "ID of the menu item"
                              }
                            }
                          },
                          "quantity": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "integer"
                              },
                              "description": {
                                "type": "string",
                                "example": "Quantity ordered"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": {
                    "type": "string",
                    "example": "List of items in the order"
                  }
                }
              },
              "specialInstructions": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "nullable": {
                    "type": "boolean",
                    "example": true
                  },
                  "description": {
                    "type": "string",
                    "example": "Special instructions for the order"
                  }
                }
              },
              "discount": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "number"
                  },
                  "format": {
                    "type": "string",
                    "example": "float"
                  },
                  "nullable": {
                    "type": "boolean",
                    "example": true
                  },
                  "description": {
                    "type": "string",
                    "example": "Discount applied to the order"
                  }
                }
              },
              "createdAt": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date-time"
                  },
                  "description": {
                    "type": "string",
                    "example": "Timestamp when the order was created"
                  }
                }
              },
              "updatedAt": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date-time"
                  },
                  "description": {
                    "type": "string",
                    "example": "Timestamp when the order was last updated"
                  }
                }
              }
            }
          }
        }
      },
      "OrderStatus": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "string"
          },
          "enum": {
            "type": "array",
            "example": [
              "Preparing",
              "Served",
              "Rejected"
            ],
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "example": "Status of the order"
          }
        }
      },
      "StaffOnDuty": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "required": {
            "type": "array",
            "example": [
              "name",
              "status",
              "role",
              "contact",
              "dob",
              "gender"
            ],
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "description": {
                    "type": "string",
                    "example": "Unique identifier for the staff member"
                  }
                }
              },
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Name of the staff member"
                  }
                }
              },
              "status": {
                "$ref": "#/components/schemas/StaffStatus"
              },
              "role": {
                "$ref": "#/components/schemas/Role"
              },
              "contact": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Contact number of the staff member"
                  }
                }
              },
              "dob": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date"
                  },
                  "description": {
                    "type": "string",
                    "example": "Date of birth of the staff member"
                  }
                }
              },
              "gender": {
                "$ref": "#/components/schemas/Gender"
              },
              "serviceTime": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "nullable": {
                    "type": "boolean",
                    "example": true
                  },
                  "description": {
                    "type": "string",
                    "example": "Duration of service"
                  }
                }
              },
              "performanceStatus": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "today": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "object"
                          },
                          "properties": {
                            "type": "object",
                            "properties": {
                              "ordersServed": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "integer"
                                  },
                                  "description": {
                                    "type": "string",
                                    "example": "Number of orders served today"
                                  }
                                }
                              },
                              "averageTime": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "string"
                                  },
                                  "description": {
                                    "type": "string",
                                    "example": "Average time to serve orders"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": {
                    "type": "string",
                    "example": "Staff performance metrics"
                  }
                }
              }
            }
          }
        }
      },
      "StaffStatus": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "string"
          },
          "enum": {
            "type": "array",
            "example": [
              "Active",
              "Inactive",
              "OnBreak"
            ],
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "example": "Status of the staff member"
          }
        }
      },
      "Report": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "required": {
            "type": "array",
            "example": [
              "period",
              "totalOrders",
              "totalSales",
              "managerId",
              "submittedToId"
            ],
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object",
            "properties": {
              "id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "description": {
                    "type": "string",
                    "example": "Unique identifier for the report"
                  }
                }
              },
              "period": {
                "$ref": "#/components/schemas/ReportPeriod"
              },
              "totalOrders": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "description": {
                    "type": "string",
                    "example": "Total number of orders in the report"
                  }
                }
              },
              "totalSales": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "number"
                  },
                  "format": {
                    "type": "string",
                    "example": "float"
                  },
                  "description": {
                    "type": "string",
                    "example": "Total sales amount in the report"
                  }
                }
              },
              "managerId": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "description": {
                    "type": "string",
                    "example": "ID of the manager who created the report"
                  }
                }
              },
              "submittedToId": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "description": {
                    "type": "string",
                    "example": "ID of the user the report was submitted to"
                  }
                }
              },
              "createdAt": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date-time"
                  },
                  "description": {
                    "type": "string",
                    "example": "Timestamp when the report was created"
                  }
                }
              }
            }
          }
        }
      },
      "ReportPeriod": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "string"
          },
          "enum": {
            "type": "array",
            "example": [
              "Daily",
              "Weekly",
              "Monthly"
            ],
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "example": "Reporting period"
          }
        }
      }
    }
  }
}